{"ast":null,"code":"var _jsxFileName = \"/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/components/Search.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Downshift from \"downshift\";\nimport Router from 'next/router';\nimport { ApolloConsumer } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\nconst SEARCH_ITEMS_QUERY = gql`\n  query SEARCH_ITEMS_QUERY($searchTerm: String!) {\n    items(where: { OR: [\n      {title_contains: $searchTerm},\n      {description_contains: $searchTerm}] }) {\n        id\n        image\n        title\n      }\n  }\n`;\n\nclass AutoComplete extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      items: [],\n      loading: false\n    });\n\n    _defineProperty(this, \"onChange\", debounce(async (e, client) => {\n      this.setState({\n        loading: true\n      });\n      const res = await client.query({\n        query: SEARCH_ITEMS_QUERY,\n        variables: {\n          searchTerm: e.target.value\n        }\n      });\n      this.setState({\n        items: res.data.items,\n        loading: false\n      });\n    }, 350));\n  }\n\n  render() {\n    return __jsx(SearchStyles, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, __jsx(ApolloConsumer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }\n    }, client => __jsx(\"inpiut\", {\n      type: \"search\",\n      onChange: e => {\n        e.persist();\n        this.onChange(e, client);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 26\n      }\n    })), __jsx(DropDown, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, \"Items will go here\"))));\n  }\n\n}\n\nexport default AutoComplete;","map":{"version":3,"sources":["/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/components/Search.js"],"names":["React","Downshift","Router","ApolloConsumer","gql","debounce","DropDown","DropDownItem","SearchStyles","SEARCH_ITEMS_QUERY","AutoComplete","Component","items","loading","e","client","setState","res","query","variables","searchTerm","target","value","data","render","persist","onChange"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAqD,mBAArD;AAEA,MAAMC,kBAAkB,GAAGL,GAAI;;;;;;;;;;CAA/B;;AAYA,MAAMM,YAAN,SAA2BC,SAA3B,CAAqC;AAAA;AAAA;;AAAA,mCAE3B;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,OAAO,EAAE;AAFH,KAF2B;;AAAA,sCAOvBR,QAAQ,CAAC,OAAOS,CAAP,EAAUC,MAAV,KAAqB;AACxC,WAAKC,QAAL,CAAc;AAAEH,QAAAA,OAAO,EAAE;AAAX,OAAd;AACA,YAAMI,GAAG,GAAG,MAAMF,MAAM,CAACG,KAAP,CAAa;AAC7BA,QAAAA,KAAK,EAAET,kBADsB;AAE7BU,QAAAA,SAAS,EAAE;AAAEC,UAAAA,UAAU,EAAEN,CAAC,CAACO,MAAF,CAASC;AAAvB;AAFkB,OAAb,CAAlB;AAIA,WAAKN,QAAL,CAAc;AACZJ,QAAAA,KAAK,EAAEK,GAAG,CAACM,IAAJ,CAASX,KADJ;AAEZC,QAAAA,OAAO,EAAE;AAFG,OAAd;AAID,KAVmB,EAUjB,GAViB,CAPe;AAAA;;AAkBnCW,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGT,MAAM,IAAM;AACb,MAAA,IAAI,EAAC,QADQ;AAEb,MAAA,QAAQ,EAAGD,CAAD,IAAO;AACfA,QAAAA,CAAC,CAACW,OAAF;AACA,aAAKC,QAAL,CAAcZ,CAAd,EAAiBC,MAAjB;AACD,OALY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADf,CADF,EAYE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BADF,CAZF,CADF,CADF;AAoBD;;AAvCkC;;AA0CrC,eAAeL,YAAf","sourcesContent":["import React from 'react';\nimport Downshift from \"downshift\"\nimport Router from 'next/router'\nimport { ApolloConsumer } from 'react-apollo'\nimport gql from 'graphql-tag'\nimport debounce from 'lodash.debounce'\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown'\n\nconst SEARCH_ITEMS_QUERY = gql`\n  query SEARCH_ITEMS_QUERY($searchTerm: String!) {\n    items(where: { OR: [\n      {title_contains: $searchTerm},\n      {description_contains: $searchTerm}] }) {\n        id\n        image\n        title\n      }\n  }\n`\n\nclass AutoComplete extends Component {\n\n  state = {\n    items: [],\n    loading: false\n  }\n\n  onChange =  debounce(async (e, client) => {\n    this.setState({ loading: true })\n    const res = await client.query({\n      query: SEARCH_ITEMS_QUERY,\n      variables: { searchTerm: e.target.value }\n    })\n    this.setState({\n      items: res.data.items,\n      loading: false,\n    })\n  }, 350)\n  render() {\n    return (\n      <SearchStyles>\n        <div>\n          <ApolloConsumer>\n            {client => ( <inpiut \n            type=\"search\" \n            onChange={(e) => {\n              e.persist()\n              this.onChange(e, client)\n            }} \n          />\n          )}\n          </ApolloConsumer>\n        \n          <DropDown>\n            <p>Items will go here</p>\n          </DropDown>\n        </div>\n      </SearchStyles>\n    );\n  }\n}\n\nexport default AutoComplete;"]},"metadata":{},"sourceType":"module"}