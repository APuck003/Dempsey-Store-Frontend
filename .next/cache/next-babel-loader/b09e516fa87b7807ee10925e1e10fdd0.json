{"ast":null,"code":"var _jsxFileName = \"/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/components/Items.js\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { Query } from 'react-apollo';\nimport gql from 'graphql-tag';\nconst ALL_ITEMS_QUERY = gql`\nquery ALL_ITEMS_QUERY {\n  items {\n    id\n    title\n    price\n    description\n    image\n    largeImage\n  }\n}\n`;\n\nclass Items extends Component {\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    }, __jsx(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, \"Items!\"), __jsx(Query, {\n      query: ALL_ITEMS_QUERY,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }\n    }, ({\n      data,\n      error,\n      loading\n    }) => {\n      if (loading) return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 32\n        }\n      }, \"loading...\");\n      if (error) return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 30\n        }\n      }, \"Error: \", error.message);\n      return __jsx(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 20\n        }\n      }, \"I found \", data.items.length, \" items!\");\n    }));\n  }\n\n}\n\nexport default Items;","map":{"version":3,"sources":["/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/components/Items.js"],"names":["React","Component","Query","gql","ALL_ITEMS_QUERY","Items","render","data","error","loading","message","items","length"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,eAAe,GAAGD,GAAI;;;;;;;;;;;CAA5B;;AAcA,MAAME,KAAN,SAAoBJ,SAApB,CAA8B;AAC5BK,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,KAAD;AAAO,MAAA,KAAK,EAAEF,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEG,MAAAA,IAAF;AAAQC,MAAAA,KAAR;AAAeC,MAAAA;AAAf,KAAD,KAA8B;AAC7B,UAAGA,OAAH,EAAY,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAP;AACZ,UAAGD,KAAH,EAAU,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAWA,KAAK,CAACE,OAAjB,CAAP;AACV,aAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAYH,IAAI,CAACI,KAAL,CAAWC,MAAvB,YAAP;AACD,KALH,CAFF,CADF;AAYD;;AAd2B;;AAiB9B,eAAeP,KAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Query } from 'react-apollo'\nimport gql from 'graphql-tag'\n\nconst ALL_ITEMS_QUERY = gql`\nquery ALL_ITEMS_QUERY {\n  items {\n    id\n    title\n    price\n    description\n    image\n    largeImage\n  }\n}\n`\n\n\nclass Items extends Component {\n  render() {\n    return (\n      <div>\n        <p>Items!</p>\n        <Query query={ALL_ITEMS_QUERY}>\n          {({ data, error, loading }) => {\n            if(loading) return <p>loading...</p>\n            if(error) return <p>Error: {error.message}</p>\n            return <p>I found {data.items.length} items!</p>\n          }}\n        </Query>\n      </div>\n    );\n  }\n}\n\nexport default Items;"]},"metadata":{},"sourceType":"module"}