{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation RESET_MUTATION($resetToken: String!, $password: String!, $confirmPassword: String!) {\\n    resetPassword(resetToken: $resetToken, password: $password, confirmPassword: $confirmPassword) {\\n      id\\n      email\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\nvar RESET_MUTATION = gql(_templateObject());\n\nvar Reset = /*#__PURE__*/function (_Component) {\n  _inherits(Reset, _Component);\n\n  var _super = _createSuper(Reset);\n\n  function Reset() {\n    var _this;\n\n    _classCallCheck(this, Reset);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      password: '',\n      confirmPassword: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveToState\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    return _this;\n  }\n\n  _createClass(Reset, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Mutation, {\n        mutation: RESET_MUTATION,\n        variables: {\n          resetToken: this.props.resetToken,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword\n        },\n        refetchQueries: [{\n          query: CURRENT_USER_QUERY\n        }]\n      }, function (reset, _ref) {\n        var error = _ref.error,\n            loading = _ref.loading,\n            called = _ref.called;\n        return __jsx(Form, {\n          method: \"post\",\n          onSubmit: function _callee(e) {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    e.preventDefault();\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(reset());\n\n                  case 3:\n                    _this2.setState({\n                      password: '',\n                      confirmPassword: ''\n                    });\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          }\n        }, __jsx(\"fieldset\", {\n          disabled: loading,\n          \"aria-busy\": loading\n        }, __jsx(\"h2\", null, \"Reset your password!\"), __jsx(Error, {\n          error: error\n        }), __jsx(\"label\", {\n          htmlFor: \"password\"\n        }, \"Password\", __jsx(\"input\", {\n          type: \"text\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: _this2.state.password,\n          onChange: _this2.saveToState\n        })), __jsx(\"label\", {\n          htmlFor: \"confirmPassword\"\n        }, \"Confirm your Password\", __jsx(\"input\", {\n          type: \"text\",\n          name: \"confirmPassword\",\n          placeholder: \"Confirm Password\",\n          value: _this2.state.confirmPassword,\n          onChange: _this2.saveToState\n        })), __jsx(\"button\", {\n          type: \"submit\"\n        }, \"Reset your Password!\")));\n      });\n    }\n  }]);\n\n  return Reset;\n}(Component);\n\n_defineProperty(Reset, \"PropTypes\", {\n  resetToken: PropTypes.string.isRequired\n});\n\nexport default Reset;","map":null,"metadata":{},"sourceType":"module"}