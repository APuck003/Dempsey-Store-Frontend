{"ast":null,"code":"var _jsxFileName = \"/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/components/TakeMyMoney.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport User, { CURRENT_USER_QUERY } from './User';\nconst CREATE_ORDER_MUTATION = gql`\n  mutation creatOrder($token: String!) {\n    id\n    charge\n    total\n    items {\n      id\n      title\n    }\n  }\n`;\n\nfunction totalItems(cart) {\n  return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0);\n}\n\nclass TakeMyMoney extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onToken\", res => {\n      console.log('On token called!');\n      console.log(res);\n    });\n  }\n\n  render() {\n    return __jsx(User, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }\n    }, ({\n      data: {\n        me\n      }\n    }) => console.log(this.props.children) || __jsx(StripeCheckout, {\n      amount: calcTotalPrice(me.cart),\n      description: `Order of ${totalItems(me.cart)} items!`,\n      image: me.cart[0].item && me.cart[0].item.image,\n      stripeKey: \"pk_test_eo2du7V3U8TVecER7HzbQJDs00P4EniFsS\",\n      currency: \"USD\",\n      email: me.email,\n      token: res => this.onToken(res),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }\n    }, this.props.children));\n  }\n\n}\n\nexport default TakeMyMoney;","map":{"version":3,"sources":["/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/components/TakeMyMoney.js"],"names":["React","Component","StripeCheckout","Mutation","Router","NProgress","PropTypes","gql","calcTotalPrice","Error","User","CURRENT_USER_QUERY","CREATE_ORDER_MUTATION","totalItems","cart","reduce","tally","cartItem","quantity","TakeMyMoney","res","console","log","render","data","me","props","children","item","image","email","onToken"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,IAAeC,kBAAf,QAAyC,QAAzC;AAEA,MAAMC,qBAAqB,GAAGL,GAAI;;;;;;;;;;CAAlC;;AAYA,SAASM,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOA,IAAI,CAACC,MAAL,CAAY,CAACC,KAAD,EAAQC,QAAR,KAAqBD,KAAK,GAAGC,QAAQ,CAACC,QAAlD,EACL,CADK,CAAP;AAED;;AAED,MAAMC,WAAN,SAA0BlB,SAA1B,CAAoC;AAAA;AAAA;;AAAA,qCAEvBmB,GAAD,IAAS;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,KALiC;AAAA;;AAOlCG,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAEC,QAAAA;AAAF;AAAR,KAAD,KAAsBJ,OAAO,CAACC,GAAR,CAAY,KAAKI,KAAL,CAAWC,QAAvB,KACrB,MAAC,cAAD;AACE,MAAA,MAAM,EAAEnB,cAAc,CAACiB,EAAE,CAACX,IAAJ,CADxB;AAEE,MAAA,WAAW,EAAG,YAAWD,UAAU,CAACY,EAAE,CAACX,IAAJ,CAAU,SAF/C;AAGE,MAAA,KAAK,EAAEW,EAAE,CAACX,IAAH,CAAQ,CAAR,EAAWc,IAAX,IAAmBH,EAAE,CAACX,IAAH,CAAQ,CAAR,EAAWc,IAAX,CAAgBC,KAH5C;AAIE,MAAA,SAAS,EAAC,4CAJZ;AAKE,MAAA,QAAQ,EAAC,KALX;AAME,MAAA,KAAK,EAAEJ,EAAE,CAACK,KANZ;AAOE,MAAA,KAAK,EAAEV,GAAG,IAAI,KAAKW,OAAL,CAAaX,GAAb,CAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASG,KAAKM,KAAL,CAAWC,QATd,CAFJ,CADF;AAgBD;;AAxBiC;;AA2BpC,eAAeR,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport StripeCheckout from 'react-stripe-checkout'\nimport { Mutation } from 'react-apollo'\nimport Router from 'next/router'\nimport NProgress from 'nprogress'\nimport PropTypes from 'prop-types'\nimport gql from 'graphql-tag'\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage'\nimport User, { CURRENT_USER_QUERY } from './User'\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation creatOrder($token: String!) {\n    id\n    charge\n    total\n    items {\n      id\n      title\n    }\n  }\n`\n\nfunction totalItems(cart) {\n  return cart.reduce((tally, cartItem) => tally + cartItem.quantity\n  , 0)\n}\n\nclass TakeMyMoney extends Component {\n\n  onToken = (res) => {\n    console.log('On token called!')\n    console.log(res)\n  }\n\n  render() {\n    return (\n      <User>\n        {({ data: { me } }) => console.log(this.props.children) ||\n          <StripeCheckout \n            amount={calcTotalPrice(me.cart)}\n            description={`Order of ${totalItems(me.cart)} items!`}\n            image={me.cart[0].item && me.cart[0].item.image}\n            stripeKey=\"pk_test_eo2du7V3U8TVecER7HzbQJDs00P4EniFsS\"\n            currency=\"USD\"\n            email={me.email}\n            token={res => this.onToken(res)}\n          >\n            {this.props.children}\n          </StripeCheckout>}\n      </User>\n    );\n  }\n}\n\nexport default TakeMyMoney;"]},"metadata":{},"sourceType":"module"}