{"ast":null,"code":"var _jsxFileName = \"/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/components/Pagination.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport gql from 'graphql-tag';\nimport { Query } from 'react-apollo';\nimport PaginationStyles from './styles/PaginationStyles';\nimport { perPage } from '../config';\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    itemsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\nconst Pagination = props => __jsx(PaginationStyles, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 3\n  }\n}, __jsx(Query, {\n  query: PAGINATION_QUERY,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }\n}, ({\n  data,\n  loading,\n  error\n}) => {\n  if (loading) return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 29\n    }\n  }, \"Loading...\");\n  const count = data.itemConnection.aggregate.count;\n  return __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 16\n    }\n  }, \"Hi I am the pagination \", count, \"!\");\n}));\n\nexport default Pagination;","map":{"version":3,"sources":["/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/components/Pagination.js"],"names":["React","gql","Query","PaginationStyles","perPage","PAGINATION_QUERY","Pagination","props","data","loading","error","count","itemConnection","aggregate"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,SAASC,KAAT,QAAsB,cAAtB;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AACA,SAASC,OAAT,QAAyB,WAAzB;AAEA,MAAMC,gBAAgB,GAAGJ,GAAI;;;;;;;;CAA7B;;AAUA,MAAMK,UAAU,GAAGC,KAAK,IACtB,MAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,KAAD;AAAO,EAAA,KAAK,EAAEF,gBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACG,CAAC;AAAEG,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA;AAAjB,CAAD,KAA8B;AAC7B,MAAID,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACb,QAAME,KAAK,GAAGH,IAAI,CAACI,cAAL,CAAoBC,SAApB,CAA8BF,KAA5C;AACA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA2BA,KAA3B,MAAP;AACD,CALH,CADF,CADF;;AAYA,eAAeL,UAAf","sourcesContent":["import React from 'react'\nimport gql from 'graphql-tag'\nimport { Query } from 'react-apollo'\nimport PaginationStyles from './styles/PaginationStyles'\nimport { perPage } from  '../config'\n\nconst PAGINATION_QUERY = gql`\n  query PAGINATION_QUERY {\n    itemsConnection {\n      aggregate {\n        count\n      }\n    }\n  }\n`\n\nconst Pagination = props => (\n  <PaginationStyles>\n    <Query query={PAGINATION_QUERY}>\n      {({ data, loading, error }) => {\n        if (loading) return <p>Loading...</p>\n        const count = data.itemConnection.aggregate.count\n        return <p>Hi I am the pagination {count}!</p>\n      }}\n    </Query>\n  </PaginationStyles>\n)\n\nexport default Pagination"]},"metadata":{},"sourceType":"module"}