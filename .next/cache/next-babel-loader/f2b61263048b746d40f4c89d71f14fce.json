{"ast":null,"code":"import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { endpoint } from '../config';\nimport { LOCAL_STATE_QUERY } from '../components/Cart';\n\nfunction createClient(_ref) {\n  var headers = _ref.headers;\n  return new ApolloClient({\n    uri: true ? endpoint : endpoint,\n    request: function request(operation) {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include'\n        },\n        headers: headers\n      });\n    },\n    clientState: {\n      resolvers: {\n        mutation: {\n          toggleCart: function toggleCart(_, variables, _ref2) {\n            var cache = _ref2.cache;\n          }\n        }\n      },\n      defaults: {\n        cartOpen: true\n      }\n    }\n  });\n}\n\nexport default withApollo(createClient);","map":{"version":3,"sources":["/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/lib/withData.js"],"names":["withApollo","ApolloClient","endpoint","LOCAL_STATE_QUERY","createClient","headers","uri","request","operation","setContext","fetchOptions","credentials","clientState","resolvers","mutation","toggleCart","_","variables","cache","defaults","cartOpen"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;AAEA,SAASC,YAAT,OAAmC;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACjC,SAAO,IAAIJ,YAAJ,CAAiB;AACtBK,IAAAA,GAAG,EAAE,OAAyCJ,QAAzC,GAAoDA,QADnC;AAEtBK,IAAAA,OAAO,EAAE,iBAAAC,SAAS,EAAI;AACpBA,MAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,QAAAA,YAAY,EAAE;AACZC,UAAAA,WAAW,EAAE;AADD,SADK;AAInBN,QAAAA,OAAO,EAAPA;AAJmB,OAArB;AAMD,KATqB;AAUtBO,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE;AACTC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UADQ,sBACGC,CADH,EACMC,SADN,SAC4B;AAAA,gBAATC,KAAS,SAATA,KAAS;AAEnC;AAHO;AADD,OADA;AAQXC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,QAAQ,EAAE;AADF;AARC;AAVS,GAAjB,CAAP;AAuBD;;AAED,eAAepB,UAAU,CAACI,YAAD,CAAzB","sourcesContent":["import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { endpoint } from '../config';\nimport { LOCAL_STATE_QUERY } from '../components/Cart'\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === 'development' ? endpoint : endpoint,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include',\n        },\n        headers,\n      });\n    },\n    clientState: {\n      resolvers: {\n        mutation: {\n          toggleCart(_, variables, { cache }) {\n\n          }\n        }\n      },\n      defaults: {\n        cartOpen: true,\n      }\n    }\n  });\n}\n\nexport default withApollo(createClient);\n"]},"metadata":{},"sourceType":"module"}