{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/components/Reset.js\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation RESET_MUTATION( $resetToken: String!, $password: String!, $confirmPassword: String!) {\\n    resetPassword(resetToken: $resetToken, password: $password, confirmPassword: $confirmPassword) {\\n      id\\n      email\\n      name\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nvar RESET_MUTATION = gql(_templateObject());\n\nvar Reset = /*#__PURE__*/function (_Component) {\n  _inherits(Reset, _Component);\n\n  var _super = _createSuper(Reset);\n\n  function Reset() {\n    var _this;\n\n    _classCallCheck(this, Reset);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      password: '',\n      confirmPassword: ''\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"saveToState\", function (e) {\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    });\n\n    return _this;\n  }\n\n  _createClass(Reset, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(Mutation, {\n        mutation: RESET_MUTATION,\n        variables: {\n          resetToken: this.props.resetToken,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 7\n        }\n      }, function (reset, _ref) {\n        var error = _ref.error,\n            loading = _ref.loading,\n            called = _ref.called;\n        return __jsx(Form, {\n          method: \"post\",\n          onSubmit: function _callee(e) {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    e.preventDefault();\n                    _context.next = 3;\n                    return _regeneratorRuntime.awrap(reset());\n\n                  case 3:\n                    _this2.setState({\n                      password: '',\n                      confirmPassword: ''\n                    });\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, null, Promise);\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }\n        }, __jsx(\"fieldset\", {\n          disabled: loading,\n          \"aria-busy\": loading,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }\n        }, __jsx(\"h2\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }\n        }, \"Reset your password!\"), __jsx(Error, {\n          error: error,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }\n        }), __jsx(\"label\", {\n          htmlFor: \"password\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }\n        }, \"Password\", __jsx(\"input\", {\n          type: \"text\",\n          name: \"password\",\n          placeholder: \"Password\",\n          value: _this2.state.password,\n          onChange: _this2.saveToState,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }\n        })), __jsx(\"label\", {\n          htmlFor: \"confirmPassword\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }\n        }, \"Confirm your Password\", __jsx(\"input\", {\n          type: \"text\",\n          name: \"confirmPassword\",\n          placeholder: \"Confirm Password\",\n          value: _this2.state.confirmPassword,\n          onChange: _this2.saveToState,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }\n        })), __jsx(\"button\", {\n          type: \"submit\",\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }\n        }, \"Reset your Password!\")));\n      });\n    }\n  }]);\n\n  return Reset;\n}(Component);\n\n_defineProperty(Reset, \"PropTypes\", {\n  resetToken: PropTypes.string.isRequired\n});\n\nexport default Reset;","map":{"version":3,"sources":["/Users/davidmacbook/Code/Advanced-React/sick-fits/frontend/components/Reset.js"],"names":["React","Component","Mutation","PropTypes","gql","Form","Error","RESET_MUTATION","Reset","password","confirmPassword","e","setState","target","name","value","resetToken","props","state","reset","error","loading","called","preventDefault","saveToState","string","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo'\nimport PropTypes from 'prop-types'\nimport gql from 'graphql-tag'\nimport Form from './styles/Form'\nimport Error from './ErrorMessage'\n\nconst RESET_MUTATION = gql`\n  mutation RESET_MUTATION( $resetToken: String!, $password: String!, $confirmPassword: String!) {\n    resetPassword(resetToken: $resetToken, password: $password, confirmPassword: $confirmPassword) {\n      id\n      email\n      name\n    }\n  }\n`\n\nclass Reset extends Component {\n\n  static PropTypes = {\n    resetToken: PropTypes.string.isRequired,\n  }\n\n  state = {\n    password: '',\n    confirmPassword: '',\n  }\n\n  saveToState = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  render() {\n    return (\n      <Mutation \n        mutation={RESET_MUTATION} \n        variables={{\n          resetToken: this.props.resetToken,\n          password: this.state.password,\n          confirmPassword: this.state.confirmPassword,\n        }}\n      >\n        {(reset, {error, loading, called}) => {\n        return (<Form method=\"post\" onSubmit={async (e) => {\n          e.preventDefault()\n          await reset()\n          this.setState({ password: '', confirmPassword: '' })\n        }}>\n          <fieldset disabled={loading} aria-busy={loading}>\n            <h2>Reset your password!</h2>\n            <Error error={error}/>\n           \n            <label htmlFor=\"password\">\n              Password\n              <input \n              type=\"text\" \n              name=\"password\" \n              placeholder=\"Password\" \n              value={this.state.password} \n              onChange={this.saveToState}/>\n            </label>\n\n            <label htmlFor=\"confirmPassword\">\n              Confirm your Password\n              <input \n              type=\"text\" \n              name=\"confirmPassword\" \n              placeholder=\"Confirm Password\" \n              value={this.state.confirmPassword} \n              onChange={this.saveToState}/>\n            </label>\n\n            <button type=\"submit\">Reset your Password!</button>\n          </fieldset>\n        </Form>)\n        }}\n      </Mutation>\n    );\n  }\n}\n\nexport default Reset;"]},"metadata":{},"sourceType":"module"}